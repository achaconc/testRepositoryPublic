{"ast":null,"code":"export const fecthWordsTagger = props => {\n  fetch(`http://localhost:1994/api/word-tagger`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      input: props.input\n    })\n  }).then(res => res.json()).then(response => {\n    if (response.words) {\n      let wordList = [];\n      let tagList = {};\n      response.words.forEach(resp => {\n        wordList = [...wordList, resp.word];\n        resp.tags.forEach(tag => {\n          tagList[tag] = tagList[tag] ? tagList[tag] + 1 : 1;\n        });\n      });\n      props.setTags(Object.entries(tagList));\n      props.setWords(wordList);\n    } else {\n      console.log(\"Error\");\n    }\n  }).catch(err => {\n    console.log(\"Error Reading data \" + err);\n  });\n};","map":{"version":3,"sources":["/Users/anabelchacon/Documents/tmp/new_repo/fe-exercise-anabelcc/react/src/app/services/fetchWordsTagger.service.tsx"],"names":["fecthWordsTagger","props","fetch","method","headers","body","JSON","stringify","input","then","res","json","response","words","wordList","tagList","forEach","resp","word","tags","tag","setTags","Object","entries","setWords","console","log","catch","err"],"mappings":"AAWA,OAAO,MAAMA,gBAAgB,GAAIC,KAAD,IAAyB;AACrDC,EAAAA,KAAK,CAAE,uCAAF,EAA0C;AAC3CC,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFkC;AAM3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAEP,KAAK,CAACO;AADI,KAAf;AANqC,GAA1C,CAAL,CAUKC,IAVL,CAUUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVjB,EAWKF,IAXL,CAWWG,QAAD,IAAc;AAChB,QAAIA,QAAQ,CAACC,KAAb,EAAoB;AAChB,UAAIC,QAAkB,GAAG,EAAzB;AACA,UAAIC,OAAoC,GAAG,EAA3C;AACAH,MAAAA,QAAQ,CAACC,KAAT,CAAeG,OAAf,CAAwBC,IAAD,IAAiB;AACpCH,QAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAcG,IAAI,CAACC,IAAnB,CAAX;AACAD,QAAAA,IAAI,CAACE,IAAL,CAAUH,OAAV,CAAmBI,GAAD,IAAiB;AAC/BL,UAAAA,OAAO,CAACK,GAAD,CAAP,GAAeL,OAAO,CAACK,GAAD,CAAP,GAAeL,OAAO,CAACK,GAAD,CAAP,GAAe,CAA9B,GAAkC,CAAjD;AACH,SAFD;AAGH,OALD;AAMAnB,MAAAA,KAAK,CAACoB,OAAN,CAAcC,MAAM,CAACC,OAAP,CAAeR,OAAf,CAAd;AACAd,MAAAA,KAAK,CAACuB,QAAN,CAAeV,QAAf;AACH,KAXD,MAYK;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,GA3BL,EA4BKC,KA5BL,CA4BWC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBE,GAApC;AACH,GA9BL;AA+BH,CAhCM","sourcesContent":["interface IWord {\n    word: string,\n    tags: string[]\n}\n\ninterface IProps {\n    input: string,\n    setTags: React.Dispatch<React.SetStateAction<[string, number][] | undefined>>,\n    setWords: React.Dispatch<React.SetStateAction<string[] | undefined>>\n}\n\nexport const fecthWordsTagger = (props: IProps): void => {\n    fetch(`http://localhost:1994/api/word-tagger`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            input: props.input\n        }),\n    })\n        .then(res => res.json())\n        .then((response) => {\n            if (response.words) {\n                let wordList: string[] = [];\n                let tagList: { [index: string]: number } = {};\n                response.words.forEach((resp: IWord) => {\n                    wordList = [...wordList, resp.word];\n                    resp.tags.forEach((tag: string) => {\n                        tagList[tag] = tagList[tag] ? tagList[tag] + 1 : 1;\n                    });\n                });\n                props.setTags(Object.entries(tagList));\n                props.setWords(wordList);\n            }\n            else {\n                console.log(\"Error\");\n            }\n        })\n        .catch(err => {\n            console.log(\"Error Reading data \" + err);\n        });\n}"]},"metadata":{},"sourceType":"module"}